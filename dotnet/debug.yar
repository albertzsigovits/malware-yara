import "pe"
import "dotnet"
import "console"

rule DotNET_Debug_YARA : pe dotnet debug console {
        meta:
                filetype = "pe"
                threat = "YARA:DEBUG.DotNET"
                author = "albertzsigovits"
                url = "https://github.com/albertzsigovits/malware-yara"
                created_date = "2023-02-06"
                version = "0"
                last_updated_date = ""
                description = "A .NET debug rule to enumerate a large collection of dotnet files"
                code = "https://github.com/VirusTotal/yara/blob/4fe97930c650179f339554bc85dbed5eac7705a1/libyara/modules/dotnet/dotnet.c"
                source = "https://yara.readthedocs.io/en/stable/modules/dotnet.html#reference"

        condition:
                console.log("=================================================================================================")
                and console.log("OriginalFilename: ", pe.version_info["OriginalFilename"])
                and console.log("filesize: ", filesize)
                and console.log("is_32bit is: ", pe.is_32bit())
                and console.log("is_64bit is: ", pe.is_64bit())
                and console.log("is_dotnet is: ", dotnet.is_dotnet)
                and console.log("dotnet.version is: ", dotnet.version)
                and console.log("dotnet.module_name is: ", dotnet.module_name)
                and console.log("dotnet.typelib is: ", dotnet.typelib)
                and console.log("dotnet.assembly.name is: ", dotnet.assembly.name)
                and console.log("dotnet.assembly.culture is: ", dotnet.assembly.culture)
                and console.log("dotnet.assembly.version.major is: ", dotnet.assembly.version.major)
                and console.log("dotnet.assembly.version.minor is: ", dotnet.assembly.version.minor)
                and console.log("dotnet.assembly.version.build_number is: ", dotnet.assembly.version.build_number)
                and console.log("dotnet.assembly.version.revision_number is: ", dotnet.assembly.version.revision_number)
                and console.log("dotnet.number_of_streams is: ", dotnet.number_of_streams)
                and for all i in (0 .. dotnet.number_of_streams - 1) : (
                                console.log("dotnet.streams: ", i)
                                and console.log("    name = ", dotnet.streams[i].name)
                                and console.log("    offset = ", dotnet.streams[i].offset)
                                and console.log("    size = ", dotnet.streams[i].size)
                )
                and console.log("dotnet.number_of_guids is: ", dotnet.number_of_guids)
                and for all i in (0 .. dotnet.number_of_guids - 1) : (
                                console.log("dotnet.guids: ", i)
                                and console.log("    guids = ", dotnet.guids[i])
                )
                and console.log("dotnet.number_of_resources is: ", dotnet.number_of_resources)
                and for all i in (0 .. dotnet.number_of_resources - 1) : (
                                console.log("dotnet.resources: ", i)
                                and console.log("    name = ", dotnet.resources[i].name)
                                and console.log("    offset = ", dotnet.resources[i].offset)
                                and console.log("    length = ", dotnet.resources[i].length)
                )
                and console.log("dotnet.number_of_modulerefs is: ", dotnet.number_of_modulerefs)
                and for all i in (0 .. dotnet.number_of_modulerefs - 1) : (
                                console.log("dotnet.modulerefs: ", i)
                                and console.log("    modulerefs = ", dotnet.modulerefs[i])
                )
                and console.log("dotnet.number_of_field_offsets is: ", dotnet.number_of_field_offsets)
                and for all i in (0 .. dotnet.number_of_field_offsets - 1) : (
                                console.log("dotnet.field_offsets: ", i)
                                and console.log("    field_offsets = ", dotnet.field_offsets[i])
                )
                and console.log("dotnet.number_of_constants is: ", dotnet.number_of_constants)
                and for all i in (0 .. dotnet.number_of_constants - 1) : (
                                console.log("dotnet.constants: ", i)
                                and console.log("    constants = ", dotnet.constants[i])
                )
                and console.log("dotnet.number_of_user_strings is: ", dotnet.number_of_user_strings)
                and for all i in (0 .. dotnet.number_of_user_strings - 1) : (
                                console.log("dotnet.user_strings: ", i)
                                and console.log("    user_strings = ", dotnet.user_strings[i])
                )
}
