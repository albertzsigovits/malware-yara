import "pe"
import "console"
rule PE_Digital_Certificate {
   meta:
      author = "albertzsigovits"
      created_date = "2023-02-14"
   condition:
      pe.data_directories[pe.IMAGE_DIRECTORY_ENTRY_SECURITY].size > 0
      and console.log("ENTRY_SECURITY size: ", pe.data_directories[pe.IMAGE_DIRECTORY_ENTRY_SECURITY].size)
}

rule PE_Potentially_Signed_Digital_Certificate : windows pe signed {
   meta:
      author = "albertzsigovits"
      created_date = "2023-02-14"
      last_updated_date = ""
      version = "0"
      filetype = "pe"
      description = "Potentially signed; digital certificate presence"
      hash = "50ddf036be715a15742f3ff43c8ad262652fc04157d13745da5fddfa05916053"
   strings:
      $cert01 = "ocsp.thawte.com"
      $cert02 = "crl.thawte.com"
      $cert03 = ".ws.symantec.com"
      $cert04 = "crl.globalsign.com"
      $cert05 = "ocsp2.globalsign.com"
      $cert06 = "crl.verisign.com"
      $cert07 = "ocsp.verisign.com0"
      $cert08 = "VeriSign, Inc.1"
      $cert09 = "GlobalSign0"
      $cert10 = "GlobalSign1"
      $cert11 = "Thawte Timestamping CA0"
      $cert12 = "Thawte Certification1"
      $cert13 = "Symantec Corporation100."
      $cert14 = "crl.comodoca.com"
      $cert15 = "secure.comodo.net/CPS0C"
      $cert16 = "crt.sectigo.com"
      $cert17 = "ocsp.sectigo.com0"
      $cert18 = "crt.usertrust.com"
      $cert19 = "ocsp.usertrust.com0"
      $cert20 = "cacerts.digicert.com"
      $cert21 = "ocsp.digicert.com"
      $cert22 = "t1.symcb.com"
      $cert23 = "t2.symcb.com0"
   condition:
      uint16(0) == 0x5A4D // MZ
      and uint32(uint32(0x3C)) == 0x00004550 // PE
      and any of ($cert*)
}
